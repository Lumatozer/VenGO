00 set                                # Setting value to a constant number
01 refset                             # Setting value to a referenced variable number
02 jump                               # Jumping to a line number
03 equals                             # Verifying if numbers are equal
04 greater                            # Verifying if a > b
05 add                                # Adding a + b and store value in c
06 sub                                # Subtracting a - b and storing the value in c
07 mult                               # Multiplying a * b and storing the value in c
08 div                                # Dividing a / b and storing the value in c
09 power                              # Powering a ** b and storing the value in c
10 floor                              # Flooring a // b and storing the value in c
11 mod                                # Modding a % b and storing the value in c
12 str.set                            # Set a variable as a string value
14 str.add                            # Add 2 strings a + b and store value in string c
15 str.mult                           # Multiplying 2 strings a * b and storing the value in c
16 str.refset                         # Setting value to a referenced string variable
17 define.jump                        # Defines the line to be a jumpable reference
18 jump.def                           # Jump to a definition 
19 endx                               # stop the program
20 and                                # and operation of two boolean value a and b and store the value in c
21 or                                 # or operation of two boolean values a or b and storing the value in c
22 not                                # not operation of two boolean values a not b and storing value in c
23 xor                                # xoring a ^ b and storing the value in c
24 round                              # round a to b number of decimals and store value in c
25 arr.init                           # initialises an array a of type x string split by ","
26 arr.push                           # insert an item x into an array y of similar type
27 arr.pull                           # lookups the value of variable a as index of array b and stores the value in c
28 arr.remove                         # removes the index of variable a from array b
29 arr.index.set                      # sets value of array a at index b to value of c with similar type
30 arr.length                         # gets the length of array and stores the value in variable b
31 arr.refset                         # set value of array a as value of array b with same children
32 arr.includes                       # recursive check of whether an object a is inside an array b and storing the value in c
33 obj.equals                         # recursive check of whether an array a is equal to an array b and storing the value in c
34 str.equals                         # checks whether string a is equal to string b and stores the value in c
35 dict.init                          # initialises a dictionary of type b from string constants as variable a
36 dict.key.set                       # set key y to value z where z is of the same type as dict x
37 dict.pull                          # get value of key y in dict x and store value in variable z
38 dict.delete                        # delete key y from dictionary x
39 dict.keys                          # gives list of all keys of dictionary x and stores result in array y
40 dict.values                        # gives list of all values of dictionary x and stores result in array y
41 dict.refset                        # set dict x to be equal to dict y